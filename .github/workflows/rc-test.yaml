name: OpenMM RC Test
on:
  workflow_dispatch:

jobs:
  rc-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        openmm: ["release candidate"]

    env:
      OPENMM: ${{ matrix.openmm }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v2

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      # More info on options: https://github.com/conda-incubator/setup-miniconda
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: devtools/conda-envs/test_env.yaml
          channels: jaimergp/label/unsupported-cudatoolkit-shim,conda-forge,defaults,omnia-dev
          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true
          channel-priority: true
          miniforge-variant: Mambaforge

      - name: Refine test environment
        shell: bash -l {0}
        run: |
          echo "installing OpenMM RC"
          mamba install -y -c conda-forge/label/openmm_rc -c conda-forge openmm

      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -v .

      - name: Environment Information
        shell: bash -l {0}
        run: |
          mamba info -a
          mamba list

      - name: Test the package
        shell: bash -l {0}
        run: |
          export TRAVIS=true
          pushd .
          pytest -v --cov-report xml --cov=perses --durations=0 -a "not advanced" -n auto -m "not gpu_needed"
          popd

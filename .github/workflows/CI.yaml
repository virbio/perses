name: CI

on:
  merge_group:
  pull_request:
    branches:
      - "main"
      - "0.10.*"
  schedule:
    # nightly tests
    - cron: "0 0 * * *"
  push:
    branches:
      - main
      - "0.10.x"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Test on ubuntu-latest, Python ${{ matrix.python-version }}, OpenMM ${{ matrix.openmm }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, "3.10"]
        openmm: ["8.0", "7.7"]
        include:
          - openmm: "dev"
            python-version: "3.10"

    env:
      OPENMM: ${{ matrix.openmm }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v2

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Setup micromamba dev
        if: ${{ matrix.openmm == 'dev' }}
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
          channels: jaimergp/label/unsupported-cudatoolkit-shim,conda-forge/label/openmm_dev,conda-forge
          channel-priority: flexible
          cache-env: true
          cache-downloads: true
          extra-specs: |
            python==${{ matrix.python-version }}
            openmmtools==0.23.0
            openmm==8.0.0dev3

      - name: Setup micromamba
        if: ${{ matrix.openmm != 'dev' }}
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
          cache-env: true
          cache-downloads: true
          extra-specs: |
            python==${{ matrix.python-version }}
            openmm==${{ matrix.openmm }}

      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -v .

      - name: Environment Information
        shell: bash -l {0}
        run: |
          micromamba info
          micromamba list



      - name: Test the package
        shell: bash -l {0}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_TEST_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_TEST_SECRET }}
        run: |
          export TRAVIS=true
          pytest -v --cov-report xml --cov=perses --durations=0 -a "not advanced" -n auto -m "not gpu_needed" perses/tests

      - name: Codecov
        if: ${{ github.repository == 'choderalab/perses'
                && github.event != 'schedule' }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
